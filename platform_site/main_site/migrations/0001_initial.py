# Generated by Django 4.1.4 on 2022-12-10 18:31

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_company', models.CharField(max_length=100, verbose_name='Name company')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('additional_phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Additional phone')),
                ('logo', models.TextField(default='https://abrakadabra.fun/uploads/posts/2021-12/1640528651_6-abrakadabra-fun-p-serii-chelovek-na-avu-7.png', verbose_name='Photo')),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hard_skills', models.TextField(verbose_name='Hard skills')),
                ('sof_skills', models.TextField(verbose_name='Soft skills')),
                ('degree', models.TextField(verbose_name='Degree')),
                ('name_of_study_institution', models.TextField(verbose_name='Institution name')),
                ('faculty', models.TextField(verbose_name='Faculty')),
                ('data_of_end_degree', models.DateField(verbose_name='Degree end')),
                ('photo', models.TextField(default='https://abrakadabra.fun/uploads/posts/2021-12/1640528651_6-abrakadabra-fun-p-serii-chelovek-na-avu-7.png', verbose_name='Photo')),
                ('experience', models.TextField(null=True, verbose_name='Experience')),
                ('status_of_check', models.CharField(choices=[('A', 'Accepted'), ('C', 'Checking')], default='C', max_length=15, verbose_name='Checking status')),
                ('project', models.JSONField(blank=True, null=True, verbose_name='Projects')),
            ],
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram', models.TextField(blank=True, null=True, verbose_name='Telegram')),
                ('github', models.TextField(blank=True, null=True, verbose_name='Github')),
                ('gitlab', models.TextField(blank=True, null=True, verbose_name='GitLub')),
                ('linkedin', models.TextField(blank=True, null=True, verbose_name='LinkedIn')),
                ('habr_career', models.TextField(blank=True, null=True, verbose_name='Habr Career')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last name')),
                ('family_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Family name')),
                ('birthday', models.DateField(verbose_name='Birthday')),
                ('city_of_living', models.CharField(max_length=100, verbose_name='City')),
                ('isu_number', models.CharField(max_length=100, verbose_name='ISU')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('is_searching', models.BooleanField(verbose_name='Searching status')),
                ('cv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MainSite.cv', verbose_name='CV')),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_skills', models.CharField(choices=[('H', 'Hard skill'), ('S', 'Soft skill')], max_length=30, verbose_name='Skill type')),
                ('name_tag', models.CharField(max_length=100, verbose_name='Tag')),
            ],
        ),
        migrations.CreateModel(
            name='DefaultUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('group', models.CharField(choices=[('S', 'Student'), ('C', 'Company')], max_length=1, verbose_name='Group')),
                ('phone', models.CharField(max_length=30, verbose_name='Phone')),
                ('family_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Family name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StudentProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Photo')),
                ('fund', models.FloatField(blank=True, null=True, verbose_name='Fund')),
                ('date_start', models.DateField(verbose_name='Start date')),
                ('date_end', models.DateField(verbose_name='End date')),
                ('checking_status', models.CharField(choices=[('A', 'Accepted'), ('C', 'Checking')], default='C', max_length=1, verbose_name='Checking status')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainSite.student', verbose_name='Student')),
                ('student_requirements', models.ManyToManyField(related_name='student_project_tag', to='MainSite.tags', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='StudentBid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'Accepted'), ('C', 'Checking')], default='C', max_length=1, verbose_name='Checking status')),
                ('date_start', models.DateField(auto_now_add=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MainSite.company', verbose_name='Company')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='MainSite.studentprojects', verbose_name='Student project')),
                ('students', models.ManyToManyField(blank=True, null=True, to='MainSite.student', verbose_name='Students')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='tags',
            field=models.ManyToManyField(related_name='tag', to='MainSite.tags', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_speed', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Work speed point')),
                ('communication', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Communication point')),
                ('tech_part', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Tech part point')),
                ('identification_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainSite.student', verbose_name='Student')),
            ],
        ),
        migrations.AddField(
            model_name='cv',
            name='link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MainSite.links', verbose_name='Links'),
        ),
        migrations.CreateModel(
            name='CompanyProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Photo')),
                ('fund', models.FloatField(blank=True, null=True, verbose_name='Fund')),
                ('date_start', models.DateField(verbose_name='Start date')),
                ('date_end', models.DateField(verbose_name='End date')),
                ('checking_status', models.CharField(choices=[('A', 'Accepted'), ('C', 'Checking')], default='C', max_length=1, verbose_name='Checking status')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainSite.company', verbose_name='Company')),
                ('company_requirements', models.ManyToManyField(related_name='company_project_tag', to='MainSite.tags', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyBid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'Accepted'), ('C', 'Checking')], default='C', max_length=1, verbose_name='Checking status')),
                ('date_start', models.DateField(auto_now_add=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='MainSite.companyprojects', verbose_name='Company project')),
                ('students', models.ManyToManyField(blank=True, null=True, to='MainSite.student', verbose_name='Students')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
    ]
